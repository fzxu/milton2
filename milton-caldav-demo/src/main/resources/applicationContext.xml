<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
           

    <bean id="caldav.demo.resource.factory" class="com.ettrema.http.caldav.demo.TResourceFactory">
    </bean>

    <bean id="resource.type.helper.default" class="com.bradmcevoy.http.webdav.WebDavResourceTypeHelper"/>

    <bean id="resource.type.helper.acl" class="com.ettrema.http.acl.AccessControlledResourceTypeHelper">
        <constructor-arg ref="resource.type.helper.default"/>
    </bean>

    <bean id="resource.type.helper.caldav" class="com.ettrema.http.caldav.CalendarResourceTypeHelper">
        <constructor-arg ref="resource.type.helper.acl"/>
    </bean>

    <bean id="auth.service" class="com.bradmcevoy.http.AuthenticationService"/>
<!--
    <bean id="response.handler" class="com.bradmcevoy.http.MsOfficeResponseHandler"/>
-->

    <bean id="handler.helper" class="com.bradmcevoy.http.HandlerHelper">
        <constructor-arg ref="auth.service"/>
        <constructor-arg>
            <list>
                <!-- Storage quota checkers-->
            </list>
        </constructor-arg>
    </bean>

    <bean id="response.handler" class="com.bradmcevoy.http.webdav.DefaultWebDavResponseHandler">
        <constructor-arg ref="auth.service"/>
        <constructor-arg ref="resource.type.helper.caldav"/>
    </bean>

    <bean id="protocol.http11" class="com.bradmcevoy.http.http11.Http11Protocol">
        <constructor-arg ref="response.handler"/>
        <constructor-arg ref="handler.helper"/>
    </bean>

    <bean id="protocol.webdav" class="com.bradmcevoy.http.webdav.WebDavProtocol">
        <constructor-arg ref="response.handler"/>
        <constructor-arg ref="handler.helper"/>
        <constructor-arg ref="resource.type.helper.caldav"/>
        <constructor-arg>
            <list>
            </list>
        </constructor-arg>
    </bean>

    <bean id="protocol.caldav" class="com.ettrema.http.caldav.CalDavProtocol">
        <constructor-arg ref="caldav.demo.resource.factory" />
        <constructor-arg ref="response.handler"/>
        <constructor-arg ref="handler.helper"/>
        <constructor-arg ref="protocol.webdav"/>
    </bean>

    <bean id="protocol.acl" class="com.ettrema.http.acl.ACLProtocol">
        <constructor-arg ref="protocol.webdav"/>
    </bean>

    <bean id="protocol.handlers" class="com.bradmcevoy.http.ProtocolHandlers">
        <constructor-arg>
            <list>
                <ref bean="protocol.http11"/>
                <ref bean="protocol.webdav"/>
                <ref bean="protocol.caldav"/>
                <ref bean="protocol.acl"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="http.manager" class="com.bradmcevoy.http.HttpManager">
        <constructor-arg ref="caldav.demo.resource.factory" />
        <constructor-arg ref="response.handler" />
        <constructor-arg ref="protocol.handlers" />

        <property name="filters">
            <list>
                <ref bean="debug.filter" />
            </list>
        </property>

    </bean>

    <!-- If added to the http manager, this filter will output request and responses
    to the logger -->
    <bean id="debug.filter" class="com.bradmcevoy.http.DebugFilter" >
        <!-- By default the debugfilter will log to the current user's home directory -->
        <!-- To change this behaviour uncomment the following line and set the path you want to log to-->
        <!--
        <constructor-arg value="/test"/>
        -->
    </bean>

    <!-- This will proxy requests from the local machine to google. This allows
         us to test against google's caldav while conveniently seeing the output in
         our own IDE's console
         -->
         <!--
    <bean id="proxy.server" class="com.ettrema.proxy.ProxyLogServer" init-method="start">
        <property name="targetHost" value="www.google.com"/>
        <property name="targetPort" value="80"/>
        <property name="listenPort" value="8080"/>
        <property name="debug" value="true"/>
    </bean>
    -->
<!--
    <bean id="cluster.google" class="com.ettrema.berry.ha.FixedCluster">
        <constructor-arg value="www.google.com" />
        <constructor-arg value="443" />
        <property name="secure" value="true"/>
    </bean>

    <bean id="proxy.task.processor" class="com.ettrema.berry.simple.ReverseProxyTaskProcessor">
        <constructor-arg ref="cluster.google" />
    </bean>

    <bean id="simpleton.http.adapter" class="com.ettrema.berry.simple.SimpletonServer" init-method="start">
        <constructor-arg value="10" />
        <constructor-arg value="10" />
        <constructor-arg ref="response.handler" />

        <property name="httpPort" value="8080"/>
    </bean>
-->
</beans>